name: CI

on: 
  push:
      branches: ["main"]
      
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v2

      - run: write-output "value=foobar" >> $env:GITHUB_OUTPUT
        id: tester


      - uses: brian-welsh/composite-build-action/setup@main
        name: setup
        with:
          name: '${{ vars.PRODUCT_NAME }}'

      - name: build
        run: |
          Write-Output "building...${{ steps.tester.outputs.value}}"
          write-output "${{ steps.setup.outputs.package-copyright }}"
          dotnet build "src/" `
            --configuration release `
            --verbosity minimal `
            -p:TreatWarningsAsErrors=false `
            -p:AnalysisMode=none `
            -p:Copyright="${{ steps.setup.outputs.package-copyright }}" `
            -p:Authors="${{ steps.setup.outputs.package-authors }}" `
            -p:Company="${{ steps.setup.outputs.package-company }}" `
            -p:AssemblyVersion="${{ steps.setup.outputs.version }}" `
            -p:FileVersion="${{ steps.setup.outputs.major-version }}.${{ steps.setup.outputs.build-number }}" `
            -p:InformationalVersion="${{ steps.setup.outputs.informational-version }}+${{ github.sha }}" `
            -p:TrimUnusedDependencies=true `
            -p:IsOnBuildAgent=true
            #-p:CodeAnalysisTreatWarningsAsErrors=true 
            #-warnaserror

          Write-Output "Publishing..."
          dotnet publish "src/" `
            --property:PublishDir="$(resolve-path '${{ github.workspace }}/../')/output" `
            --configuration release `
            --no-restore `
            --no-build
        shell: pwsh

      - name: debug
        run: |
            gci env: | select name,value
            Write-host "ref: ${{ github.ref }}"
        shell: pwsh  

      - uses: brian-welsh/composite-build-action/package@main
        id: package
        with:
          package-name: '${{ vars.PRODUCT_NAME }}'
          package-version: ${{ steps.setup.outputs.informational-version }}
          package-channel: ${{ steps.setup.outputs.channel }}

      - uses: brian-welsh/composite-build-action/release@main
        id: release
        with:
          package-name: '${{ vars.PRODUCT_NAME }}'
          release-version: ${{ steps.setup.outputs.informational-version }}
          release-channel: ${{ steps.setup.outputs.channel }}
          release-package: ${{ steps.package.outputs.path }}          

      - run: |
          write-host 'Version: ${{ steps.setup.outputs.version }}'
          write-host 'Version: ${{ steps.setup.outputs.informational-version }}'
        shell: pwsh





    